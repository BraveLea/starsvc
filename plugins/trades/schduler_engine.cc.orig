//  Copyright (c) 2016-2017 The star Authors. All rights reserved.
//  Created on: 2017年1月7日 Author: kerry

#include "trades/schduler_engine.h"
#include "trades/trades_proto_buf.h"
#include "trades/operator_code.h"
#include "trades/errno.h"
#include "net/comm_head.h"
#include "net/packet_processing.h"
#include "logic/logic_unit.h"
#include "basic/template.h"

namespace trades_logic {
TradesManager* TradesEngine::schduler_mgr_ = NULL;
TradesEngine* TradesEngine::schduler_engine_ = NULL;

TradesManager::TradesManager() {
    trades_cache_ = new TradesCache();
              Init();
}

TradesManager::~TradesManager() {
    DeinitThreadrw(lock_);
    if (trades_cache_) {
        delete trades_cache_;
        trades_cache_ = NULL;
    }

}

void TradesManager::InitDB(trades_logic::TradesDB* trades_db) {
    trades_db_ = trades_db;
}

void TradesManager::Init() {
    InitThreadrw(&lock_);
}

void TradesManager::InitData() {
    trades_db_->OnFetchPlatformStar(trades_cache_->trades_star_map_);
    LOG_MSG2("trades map %lld", trades_cache_->trades_star_map_.size());
}

void TradesManager::TimeEvent(int opcode, int time) {
    switch (opcode) {
    default:
        break;
    }
}

void TradesManager::CreateTaskTime() {

}

}
